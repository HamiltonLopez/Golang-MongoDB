name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
permissions:
  contents: write

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:5.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongo --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      MONGO_URI: mongodb://localhost:27017

      
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23' # Usa la 1.20 por compatibilidad con tidy

      - name: Instalar dependencias
        run: go mod tidy

      - name: Ejecutar pruebas unitarias (y de integración si están en el mismo módulo)
        run: |
          echo "Ejecutando pruebas..."
          go test -run ^Test -short ./controllers/

      - name: Construir imagen Docker
        run: docker build -t go-mongo-app .

      - name: Levantar contenedores para pruebas externas (opcional)
        run: docker compose up -d || true

      - name: Ejecutar pruebas de integración externas (si están separadas)
        run: |
          echo "Ejecutando pruebas de integración externas..."
          go test ./... -v || true

      - name: Apagar contenedores
        if: always()
        run: docker compose down || true

  release:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Generate new release tag
          id: tag
          run: |
            # Obtén el último tag
            LAST_TAG=$(git describe --tags --abbrev=0)
            echo "Último tag: $LAST_TAG"
            
            # Incrementa el número de versión (este es solo un ejemplo de incremento)
            VERSION="v1.00.$((${LAST_TAG##*.} + 1))"
            echo "VERSION=$VERSION" >> $GITHUB_ENV
            git tag $VERSION
            git push origin $VERSION




      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        
        with:
          tag_name: ${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Build Docker image for GitHub Packages
        run: |
          docker build -t ghcr.io/hamiltonlopez/go-mongo-app:latest .



      - name: Push Docker image to GitHub Packages
        run: |
          docker push ghcr.io/hamiltonlopez/go-mongo-app:latest 

