name: CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:5.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongo --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      MONGO_URI: mongodb://localhost:27017

      
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23' # Usa la 1.20 por compatibilidad con tidy

      - name: Instalar dependencias
        run: go mod tidy

      - name: Ejecutar pruebas unitarias (y de integración si están en el mismo módulo)
        run: |
          echo "Ejecutando pruebas..."
          go test -run ^Test -short ./controllers/

      - name: Construir imagen Docker
        run: docker build -t go-mongo-app .

      - name: Levantar contenedores para pruebas externas (opcional)
        run: docker compose up -d || true

      - name: Ejecutar pruebas de integración externas (si están separadas)
        run: |
          echo "Ejecutando pruebas de integración externas..."
          go test ./... -v || true

      - name: Apagar contenedores
        if: always()
        run: docker compose down || true
