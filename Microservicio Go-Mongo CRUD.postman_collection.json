{
	"info": {
		"_postman_id": "5bfe97c2-7993-40be-b6a5-4d8bcec16495",
		"name": "Microservicio Go-Mongo CRUD",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43745658",
		"_collection_link": "https://hamilton-9581427.postman.co/workspace/Hamilton's-Workspace~cbdb154a-4a2b-4cb1-80c8-9d4a6b67b204/collection/43745658-5bfe97c2-7993-40be-b6a5-4d8bcec16495?action=share&source=collection_link&creator=43745658"
	},
	"item": [
		{
			"name": "Crear estudiante",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Estudiante creado\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"// Guarda el ID del estudiante para pruebas posteriores",
							"const res = pm.response.json();",
							"pm.collectionVariables.set(\"student_id\", res._id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Juan PÃ©rez\",\n    \"age\": 21,\n    \"email\": \"juan@example.com\"\n}"
				},
				"url": {
					"raw": "http://localhost:8080/students",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"students"
					]
				}
			},
			"response": []
		},
		{
			"name": "Listar estudiantes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200 OK\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Es un array\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('array');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/students",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"students"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener estudiante por ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status 200 OK\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Contiene el ID correcto\", function () {",
							"    pm.expect(pm.response.json()._id).to.eql(pm.collectionVariables.get(\"student_id\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/students/{{student_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"students",
						"{{student_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar estudiante",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Estudiante actualizado correctamente\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"_id\": \"{{student_id}}\",\n    \"name\": \"Juan Actualizado\",\n    \"age\": 22,\n    \"email\": \"juanactualizado@example.com\"\n}"
				},
				"url": {
					"raw": "http://localhost:8080/students",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"students"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar estudiante",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Estudiante eliminado\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/students/{{student_id}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"students",
						"{{student_id}}"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "student_id",
			"value": ""
		}
	]
}